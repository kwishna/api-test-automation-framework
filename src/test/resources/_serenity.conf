environments {
  chrome {
    webdriver {
      driver = chrome
      autodownload = true
      capabilities {
        browserName = "chrome"
;         browserVersion = "103.0"
        platformName = "Windows 11"
        acceptInsecureCerts = true
        "goog:chromeOptions" {
          args = ["test-type", "ignore-certificate-errors", "headless", "--window-size=1000,800"
            "incognito", "disable-infobars", "disable-gpu", "disable-default-apps", "disable-popup-blocking"]
;           extensions = ['src/test/resources/sample-extensions/custom-curser-extension.crx'
;             'src/test/resources/sample-extensions/dark-reader-extension.crx']
          excludeSwitches = ["disable-popup-blocking"]
;           binary = '${HOME}/path/to/chromedriver'
          prefs {
             download.default_directory = "./target"
             download.prompt_for_download = false
          }
        }
;       proxy {
;          proxyType = "30000"
;          httpProxy = "myproxy.myorgcom:3128"
;         }
      }
    }
  }
  edge {
    webdriver {
      capabilities {
        browserName = "MicrosoftEdge"
        "ms:edgeOptions" {
          args = ["test-type", "ignore-certificate-errors", "headless",
            "incognito", "disable-infobars", "disable-gpu", "disable-default-apps", "disable-popup-blocking"]
        timeouts {
          implicit = 1000
          script = 1000
          pageLoad = 1000
          }
        }
      }
    }
  }
  firefox {
    webdriver {
      capabilities {
        browserName = "firefox"
        pageLoadStrategy = "normal"
        acceptInsecureCerts = true
        unhandledPromptBehavior = "dismiss"
        strictFileInteractability = true

        "moz:firefoxOptions" {
          args = ["-headless"],
          prefs {
            "javascript.options.showInConsole": false
          },
          log {"level": "info"},
        }
        timeouts {
              implicit = 1000
              script = 1000
              pageLoad = 1000
        }
      }
    }
  }
  remote {
        driver = remote
        remote.url = "https://hub.browserstack.com/wd/hub"
    }
}

serenity {
    report {
       accessibility = true
    }
    requirement {
        types = "epic, feature"
    }
}

sysinfo {
  lead = Daisy
  build = "${env.BUILD_NUMBER}"
  Test Run {
    Run By = "${env.USER}"
    Java Version = "${java.version}"
  }
}

browserstack.user="${BROWSERSTACK_USERNAME}"
browserstack.key="${BROWSERSTACK_ACCESS_KEY}"
